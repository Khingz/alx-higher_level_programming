#1-my_list.txt

Print a sorted list
===================

Usage
=====

import module
	>>> MyList = __import__('1-my_list').MyList

sort empty list
	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

sort list of int
	>>> my_list = MyList([4, 2, 7, 9])
	>>> my_list.print_sorted()
	[2, 4, 7, 9]
	>>> print(my_list)
	[4, 2, 7, 9]

Not a list : prints for tuples since it is an iterable
	>>> my_list = MyList((8, 5, 3))
	>>> my_list.print_sorted()
	[3, 5, 8]

	>>> my_list = MyList(1)
	Traceback (most recent call last):
        TypeError: 'int' object is not iterable

	>>> my_list = MyList(None)
        Traceback (most recent call last):
        TypeError: 'NoneType' object is not iterable

Not a list of int
	>>> my_list = MyList(['a', 'b', 7, 9])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'int' and 'str'

	>>> my_list = MyList(['z', 'b', 'd'])
        >>> my_list.print_sorted()
	['b', 'd', 'z']

	>>> my_list = MyList(('z', 'b', 'd'))
        >>> my_list.print_sorted()
        ['b', 'd', 'z']

check for type
	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

	>>> print(my_list)
	[]

	>>> my_list = MyList([1, 2], [3, 4])
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 2

	>>> my_list = MyList()
        >>> my_list.append(1)
        >>> my_list.append(2)
        >>> my_list.append(3)
        >>> print(my_list)
        [1, 2, 3]

	>>> my_list[0] = 5
        >>> print(my_list)
        [5, 2, 3]

	>>> my_list.remove(5)
        >>> print(my_list)
        [2, 3]

	>>> my_list = MyList()
        >>> print(my_list.print_sorted)
        <bound method MyList.print_sorted of []>

	>>> my_list.print_sorted(1)
        Traceback (most recent call last):
        TypeError: print_sorted() takes 1 positional argument but 2 were given
